# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ModelService_pb2 as ModelService__pb2


class ModelServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Save = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Save',
        request_serializer=ModelService__pb2.SaveRequest.SerializeToString,
        response_deserializer=ModelService__pb2.SaveReply.FromString,
        )
    self.Run = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Run',
        request_serializer=ModelService__pb2.RunRequest.SerializeToString,
        response_deserializer=ModelService__pb2.RunReply.FromString,
        )
    self.Health = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Health',
        request_serializer=ModelService__pb2.HealthRequest.SerializeToString,
        response_deserializer=ModelService__pb2.HealthReply.FromString,
        )
    self.Rebuild = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Rebuild',
        request_serializer=ModelService__pb2.RebuildRequest.SerializeToString,
        response_deserializer=ModelService__pb2.RebuildReply.FromString,
        )
    self.Visualize = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Visualize',
        request_serializer=ModelService__pb2.VisualizeRequest.SerializeToString,
        response_deserializer=ModelService__pb2.VisualizeReply.FromString,
        )
    self.Load = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/Load',
        request_serializer=ModelService__pb2.LoadRequest.SerializeToString,
        response_deserializer=ModelService__pb2.LoadReply.FromString,
        )
    self.RegisterEntities = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/RegisterEntities',
        request_serializer=ModelService__pb2.RegisterEntitiesRequest.SerializeToString,
        response_deserializer=ModelService__pb2.RegisterEntitiesReply.FromString,
        )
    self.RegisterModelEntity = channel.unary_unary(
        '/acidaes.datanext.ml.ModelService/RegisterModelEntity',
        request_serializer=ModelService__pb2.RegisterModelEntityRequest.SerializeToString,
        response_deserializer=ModelService__pb2.RegisterEntitiesReply.FromString,
        )


class ModelServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Save(self, request, context):
    """rpc SaveProject(SaveProjectRequest) returns (SaveProjectReply) {};
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Run(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Health(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Rebuild(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Visualize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Load(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterEntities(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterModelEntity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ModelServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Save': grpc.unary_unary_rpc_method_handler(
          servicer.Save,
          request_deserializer=ModelService__pb2.SaveRequest.FromString,
          response_serializer=ModelService__pb2.SaveReply.SerializeToString,
      ),
      'Run': grpc.unary_unary_rpc_method_handler(
          servicer.Run,
          request_deserializer=ModelService__pb2.RunRequest.FromString,
          response_serializer=ModelService__pb2.RunReply.SerializeToString,
      ),
      'Health': grpc.unary_unary_rpc_method_handler(
          servicer.Health,
          request_deserializer=ModelService__pb2.HealthRequest.FromString,
          response_serializer=ModelService__pb2.HealthReply.SerializeToString,
      ),
      'Rebuild': grpc.unary_unary_rpc_method_handler(
          servicer.Rebuild,
          request_deserializer=ModelService__pb2.RebuildRequest.FromString,
          response_serializer=ModelService__pb2.RebuildReply.SerializeToString,
      ),
      'Visualize': grpc.unary_unary_rpc_method_handler(
          servicer.Visualize,
          request_deserializer=ModelService__pb2.VisualizeRequest.FromString,
          response_serializer=ModelService__pb2.VisualizeReply.SerializeToString,
      ),
      'Load': grpc.unary_unary_rpc_method_handler(
          servicer.Load,
          request_deserializer=ModelService__pb2.LoadRequest.FromString,
          response_serializer=ModelService__pb2.LoadReply.SerializeToString,
      ),
      'RegisterEntities': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterEntities,
          request_deserializer=ModelService__pb2.RegisterEntitiesRequest.FromString,
          response_serializer=ModelService__pb2.RegisterEntitiesReply.SerializeToString,
      ),
      'RegisterModelEntity': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterModelEntity,
          request_deserializer=ModelService__pb2.RegisterModelEntityRequest.FromString,
          response_serializer=ModelService__pb2.RegisterEntitiesReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'acidaes.datanext.ml.ModelService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
